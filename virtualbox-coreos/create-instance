#!/bin/bash

if [[ -z $VDI_TEMPLATE ]]; then
    echo "VDI_TEMPLATE not set"
    exit
fi

if [[ -z $ ]]; then
  VDI_STORAGE="/vmstroage/vdis"
fi

echo "Env:"
echo "VDI_TEMPLATE: $VDI_TEMPLATE"
echo "VDI_STORAGE: $VDI_STORAGE"

function get_latest_vm {
  local max=0

  while read line; do
    if [[ $line =~ "\"coreos\"" ]]; then
      if [[ 1 > $max ]]; then
        max=1
      fi
    fi

    vmreg="\"coreos-([0-9]+)\""

    if [[ $line =~ $vmreg ]]; then
      num="${BASH_REMATCH[1]}"
      if [[ $num -gt $max ]]; then
        max=$num
      fi
    fi
  done <<< "$(vboxmanage list vms)"

  echo $max
}

function get_next_id {
  echo $(($(get_latest_vm) + 1))
}

function setup_vm {
  local vmid=$1
  local vmname="coreos-$vmid"
  local hdfile="$VDI_STORAGE/$vmname.vdi"
  local configdrive="$VDI_STORAGE/$vmname.configdrive.img"
  local configdrive_vmdk="$VDI_STORAGE/$vmname.configdrive.vmdk"

  echo "Name: $vmname"
  echo "Disk file: $hdfile"
  echo "Config-drive: $configdrive"
  echo

  local a=$(( $vmid / 256 ))
  local b=$(( $vmid - $a * 256))

  export IP_ADDRESS="10.5.$a.$b"
  export NAME=$vmname

  echo "IP Address: $IP_ADDRESS"

  cat cl-config | envsubst '$IP_ADDRESS $NAME $ETCD_INITIAL_CLUSTER_STATE $ETCD_INITIAL_CLUSTER' | ct | ./ignition-disk-gen > $configdrive
  vboxmanage internalcommands createrawvmdk -filename $configdrive_vmdk -rawdisk $configdrive

  vboxmanage clonehd --format VDI "$VDI_TEMPLATE" $hdfile
  vboxmanage modifyhd $hdfile --resize $((64 * 1024)) #64GB

  vboxmanage createvm --name $vmname --ostype Linux26_64 --register

  vboxmanage storagectl $vmname --name "SATA Controller" --add sata --controller IntelAHCI
  vboxmanage storageattach $vmname --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium $hdfile
  vboxmanage storageattach $vmname --storagectl "SATA Controller" --port 1 --device 0 --type hdd --medium "$configdrive_vmdk"

  vboxmanage modifyvm "$vmname" --vrde on

  vboxmanage modifyvm $vmname --ioapic on
  vboxmanage modifyvm $vmname --boot1 disk --boot2 disk
  vboxmanage modifyvm $vmname --memory 2048
  vboxmanage modifyvm $vmname --nic1 bridged --bridgeadapter1 enp2s0

  # vboxmanage modifyvm $vmname --firmware efi
}

vmid=$(get_next_id)
setup_vm $vmid

vboxmanage startvm coreos-$vmid --type headless
